{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAG/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,GACLA,GAASO,IAAI,G,CAzCFC,SAASC,cAAc,SAE/BC,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOH,EAAII,cAAcf,MAAMgB,OAC9BF,OAAOH,EAAII,cAAcR,KAAKS,OAA3C,MACMC,EAASH,OAAOH,EAAII,cAAcE,OAAOD,OAE/C,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnCpB,EADiBoB,EACOL,GACrBM,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACfoB,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAIrDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAChBoB,EAAAxB,GAASyB,OAAOG,QACd,sBAAoBzB,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n\nform.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(evt.currentTarget.delay.value);\n  const step = Number(evt.currentTarget.step.value);\n  const amount = Number(evt.currentTarget.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const position = i;\n    createPromise(position, delay)\n      .then(({ position, delay } ) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`,\n          );\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  \n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.5;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  delay += step;\n  })\n}\n\n\n// Код який працював до рефакторингу:\n\n\n// import Notiflix from 'notiflix';\n\n// const form = document.querySelector('.form');\n\n// form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(evt) {\n//   evt.preventDefault();\n//   let delay = Number(evt.currentTarget.delay.value);\n//   const step = Number(evt.currentTarget.step.value);\n//   const amount = Number(evt.currentTarget.amount.value);\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     const position = i;\n//     createPromise(position, delay)\n//       .then(({ position, delay }) => {\n//         setTimeout(() => {\n//           Notiflix.Notify.success(\n//             `✅ Fulfilled promise ${position} in ${delay}ms`\n//           );\n//           // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//         }, delay);\n//       })\n//       .catch(({ position, delay }) => {\n//         setTimeout(() => {\n//           Notiflix.Notify.failure(\n//             `❌ Rejected promise ${position} in ${delay}ms`\n//           );\n//           // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//         }, delay);\n//       });\n//     delay += step;\n//   }\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.5;\n\n//   return new Promise((resolve, reject) => {\n//     if (shouldResolve) {\n//       resolve({ position, delay });\n//     } else {\n//       reject({ position, delay });\n//     }\n//   });\n// }\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","step","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","currentTarget","value","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.46605d30.js.map"}