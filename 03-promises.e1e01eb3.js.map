{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAG/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,GACLA,GAASO,I,IAzCEC,SAASC,cAAc,SAE/BC,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAIC,iBAKJ,IAJA,IAAIC,EAAQC,OAAOH,EAAII,cAAcf,MAAMgB,OAErCC,GADOH,OAAOH,EAAII,cAAcR,KAAKS,OAC5BF,OAAOH,EAAII,cAAcE,OAAOD,QAEtCE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnCpB,EADiBoB,EACOL,GACrBM,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACfqB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAInDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAChBqB,EAAAzB,GAAS0B,OAAOI,QACd,sBAAuCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\n\nform.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(evt.currentTarget.delay.value);\n  const step = Number(evt.currentTarget.step.value);\n  const amount = Number(evt.currentTarget.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const position = i;\n    createPromise(position, delay)\n      .then(({ position, delay } ) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`,\n          );\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  \n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.5;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  delay += step;\n  })\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// for (let i = 1; i <= amount; i += 1) {\n//   const position = i;\n//   createPromise(position, delay)\n//     .then(({ position, delay }) => {\n//       setTimeout(() => {\n//       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       }, delay);\n//     })\n//     .catch(({ position, delay }) => {\n//       setTimeout(() => {\n//       Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       }, delay);\n//     });\n//   delay += step;\n// }\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","step","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","currentTarget","value","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e1e01eb3.js.map"}